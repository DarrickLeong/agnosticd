---
- name: Get information about the workspace
  uri:
    url: https://us.schematics.cloud.ibm.com/v1/workspaces/{{ workspace_id }}
    method: GET
    headers:
      Authorization: Bearer {{ infra_ibm_template_create_access_token }}
  register: r_workspace

- name: Set workspace template ID
  set_fact:
    workspace_template_id: "{{ r_workspace.json.template_data[0].id }}"
- debug:
    var: workspace_template_id
  
- name: Upload TF tarball to workspace
  command: >-
    curl -X PUT 
    https://us.schematics.cloud.ibm.com/v1/workspaces/{{ workspace_id }}/template_data/{{ workspace_template_id }}/template_repo_upload
    -H "Authorization: Bearer {{ infra_ibm_template_create_access_token }}"
    -H "Content-Type: multipart/form-data"
    --form "file={{ ibm_cloud_template_tar }}"
  # Ansible doesn't support multipart/form-data until 2.10
  # uri:
  #   url: https://us.schematics.cloud.ibm.com/v1/workspaces/{{ workspace_id }}/template_data/{{ workspace_template_id }}/template_repo_upload
  #   method: PUT
  #   headers:
  #     Authorization: Bearer {{ infra_ibm_template_create_access_token }}
  #     Content-Type: multipart/form-data
  #   body:
  #     file: "{{ ibm_cloud_template_tar }}"

- name: Wait for update to finish
  command: >
    ibmcloud schematics logs --id {{ workspace_id }}
  register: r_workspace_update
  retries: 6
  delay: 10
  until: "'Done with the Activity' in r_workspace_update.stdout"

- name: Generate plan
  command: >
    ibmcloud schematics plan --id {{ workspace_id}} --output json
  register: r_plan_act_id

- name: Wait for plan to generate
  command: >
    ibmcloud schematics logs --id {{ workspace_id }} 
    --act-id {{ (r_plan_act_id.stdout | from_json).activityid }}
  register: r_plan
  retries: 6
  delay: 10
  until: "'Done with the workspace action' in r_plan.stdout"

- name: Apply plan
  command: >
    ibmcloud schematics apply --id {{ workspace_id }} -f --output json
  register: r_apply_act_id

- name: Wait for apply to finish
  command: >
    ibmcloud schematics logs --id {{ workspace_id }}
    --act-id {{ (r_apply_act_id.stdout | from_json).activityid }}
  register: r_apply
  retries: 20
  delay: 30
  until: "'Done with the workspace action' in r_apply.stdout"
