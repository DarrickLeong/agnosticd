---
- name: Get workspaces
  command: >
    ibmcloud schematics workspace list -o json
  register: r_workspaces

- name: Set fact for workspace_id
  set_fact:
    workspace_id: "{{ (r_workspaces.stdout | from_json).workspaces | json_query(workspace_id_query) }}"
  vars:
    workspace_id_query: >
      [?name=='{{ guid }}-workspace'].id|[0]

- name: Get information about the workspace
  command: >
    ibmcloud schematics workspace get --id {{ workspace_id }} -o json
  register: r_full_workspace

- name: Destroy resources in the workspace
  command: >
    ibmcloud schematics destroy --id {{ workspace_id }} --output json --force
  register: r_destroy_act_id
- debug:
    var: r_destroy_act_id

- name: Wait for resources to be destroyed
  command: >
    ibmcloud schematics logs --id {{ workspace_id }}
    --act-id {{ (r_destroy_act_id.stdout | from_json).activityid }}
  register: r_destroy_resources
  retries: 20
  delay: 30
  until: "'Done with the workspace action' in r_destroy_resources.stdout"

- name: Destroy workspace
  command: >
    ibmcloud schematics workspace delete --id {{ workspace_id }} --force

- name: Wait for workspace to be deleted
  command: >
    ibmcloud schematics workspace list -o json
  register: r_updated_workspaces
  retries: 20
  delay: 30
  until: (r_updated_workspaces.stdout | from_json).workspaces | json_query(deleted_workspace_query) | length == 0
  vars:
    deleted_workspace_query: >
      [?name=='{{ guid }}-workspace']

- name: Listing ssh-key
  command: >
    ibmcloud is keys --json
  register: r_ssh_keys

- debug:
    var: r_ssh_keys.stdout | from_json

- name: Set the key_pair_id 
  set_fact:
    key_pair_id: "{{ (r_ssh_keys.stdout | from_json) | json_query(key_pair_id_query) }}"
  vars:
    key_pair_id_query: >
      [?name=='{{ guid }}-key'].id|[0]

- name: Delete key pair
  command: >
    ibmcloud is key-delete {{ key_pair_id }} --force 