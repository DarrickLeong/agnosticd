---
- name: List SSH keys available in account
  uri:
    url: https://us-south.iaas.cloud.ibm.com/v1/keys?version=2020-07-14&generation=2
    method: GET
    headers:
      Authorization: Bearer {{ infra_ibm_prep_access_token }}
  register: r_ssh_keys

- debug:
    var: r_ssh_keys

- name: Get fingerprint of new SSH key
  shell: >-
    cat ssh-rsa {{output_dir}}/{{env_authorized_key}}.pub
    | ssh-keygen -lf - 
    | cut -d " " -f2
  register: r_ssh_key_fingerprint

- debug:
    var: r_ssh_key_fingerprint.stdout

- name: Create SSH key using infra key if it doesn't exist
  when: r_ssh_keys.json['keys'] | json_query(ssh_key_query) | length == 0
  uri:
    url: https://us-south.iaas.cloud.ibm.com/v1/keys?version=2020-07-14&generation=2"
    method: POST
    body_format: json
    status_code: 201
    headers:
      Authorization: Bearer {{ infra_ibm_prep_access_token }}
    body:
      name: "{{ guid }}-key"
      public_key: "{{ lookup('file', output_dir ~ '/' ~ env_authorized_key ~ '.pub') }}"
      type: "rsa"
  register: r_ssh_key_new
  vars:
    ssh_key_query: >
      [?fingerprint=='{{ r_ssh_key_fingerprint.stdout }}']

# - name: Create SSH key if it does not exist
#   when: (r_ssh_keys.stdout | from_json) | json_query(ssh_key_query) | length == 0
#   command: >-
#     ibmcloud is keyc {{ guid }}-key "{{ infra_ibm_ssh_key_pubssh_key }}"
#     --resource-group-id {{ resource_group_id }} --json
#   vars:
#     ssh_key_query: >
#       [?name=='{{ guid }}-key']
#   register: r_ssh_key_new
#   tags:
#     - ssh_keys

# TODO: Add task to get SSH key ID for other use